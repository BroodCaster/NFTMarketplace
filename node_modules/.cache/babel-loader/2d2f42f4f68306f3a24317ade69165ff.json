{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport Eth from 'web3-eth';\nimport NFTMarketplace from \"../abis/NFTMarketplace.json\";\nvar selectedAccount;\nvar erc721token;\nvar isInitialized = false;\nvar web3;\nvar address;\nexport var init =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var provider, accounts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = window.ethereum;\n\n            if (!(typeof provider !== 'undefined')) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return window.ethereum.request({\n              method: 'eth_requestAccounts'\n            });\n\n          case 5:\n            accounts = _context.sent;\n            selectedAccount = accounts[0];\n            console.log(\"Selected account is \".concat(selectedAccount));\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (_context.t0.code === 4001) {\n              console.log(\"User rejected request\"); //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\n            }\n\n            console.log(_context.t0);\n\n          case 14:\n            window.ethereum.on('accountsChanged', function (accounts) {\n              selectedAccount = accounts[0];\n\n              if (typeof selectedAccount == \"undefined\") {//window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\n              }\n\n              console.log(\"Selected account changed to \".concat(selectedAccount));\n            });\n            web3 = new Web3(provider);\n            address = NFTMarketplace.networks['5777'].address;\n            erc721token = new web3.eth.Contract(NFTMarketplace.abi, address);\n            isInitialized = true;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 10]]);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var mintToken =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data, price) {\n    var txHash, token_id, eth_wei, transactionParameters, receipt, topics, tokenIdHex;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (isInitialized) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return init();\n\n          case 3:\n            txHash = null;\n            token_id = 0;\n            eth_wei = web3.utils.toWei(price, 'ether');\n            transactionParameters = {\n              to: address,\n              from: selectedAccount,\n              'data': erc721token.methods.mint(data, eth_wei).encodeABI()\n            };\n            _context2.prev = 7;\n            _context2.next = 10;\n            return window.ethereum.request({\n              method: 'eth_sendTransaction',\n              params: [transactionParameters]\n            });\n\n          case 10:\n            txHash = _context2.sent;\n            _context2.next = 17;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](7);\n            console.log(_context2.t0);\n\n            if (_context2.t0.code === 4001) {\n              window.alert(\"You just denied transaction!\");\n            }\n\n          case 17:\n            _context2.next = 19;\n            return web3.eth.getTransactionReceipt(txHash).then(function (result) {\n              return result;\n            });\n\n          case 19:\n            receipt = _context2.sent;\n            topics = receipt['logs'][0]['topics'];\n            tokenIdHex = topics[3].toString(10);\n            token_id = parseInt(tokenIdHex, 16);\n            return _context2.abrupt(\"return\", {\n              'Hash': txHash,\n              'TokenID': token_id,\n              'Price': price\n            });\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[7, 13]]);\n  }));\n\n  return function mintToken(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getBalance =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (isInitialized) {\n              _context3.next = 3;\n              break;\n            }\n\n            _context3.next = 3;\n            return init();\n\n          case 3:\n            return _context3.abrupt(\"return\", erc721token.methods.balanceOf(selectedAccount).call());\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getBalance() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var totalSupply =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (isInitialized) {\n              _context4.next = 3;\n              break;\n            }\n\n            _context4.next = 3;\n            return init();\n\n          case 3:\n            return _context4.abrupt(\"return\", erc721token.methods.totalSupply().call());\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function totalSupply() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var ownerOf =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (isInitialized) {\n              _context5.next = 3;\n              break;\n            }\n\n            _context5.next = 3;\n            return init();\n\n          case 3:\n            return _context5.abrupt(\"return\", erc721token.methods.ownerOf(id).call());\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function ownerOf(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var payEther =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(_id) {\n    var isTransaction, price, eth_wei, txHash;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (isInitialized) {\n              _context6.next = 3;\n              break;\n            }\n\n            _context6.next = 3;\n            return init();\n\n          case 3:\n            //const unit = require('ethjs-unit');\n            isTransaction = false;\n            _context6.next = 6;\n            return erc721token.methods.getPrice(_id).call();\n\n          case 6:\n            price = _context6.sent;\n            console.log(price);\n            console.log(address);\n            eth_wei = web3.utils.toWei(price, 'ether');\n\n            if (!(selectedAccount != null)) {\n              _context6.next = 24;\n              break;\n            }\n\n            txHash = null;\n            _context6.prev = 12;\n            _context6.next = 15;\n            return erc721token.methods.buy(_id).send({\n              from: selectedAccount,\n              value: eth_wei\n            });\n\n          case 15:\n            txHash = _context6.sent;\n            console.log(txHash);\n            _context6.next = 23;\n            break;\n\n          case 19:\n            _context6.prev = 19;\n            _context6.t0 = _context6[\"catch\"](12);\n            console.log(_context6.t0.code);\n            console.log(_context6.t0);\n\n          case 23:\n            isTransaction = true;\n\n          case 24:\n            return _context6.abrupt(\"return\", isTransaction);\n\n          case 25:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[12, 19]]);\n  }));\n\n  return function payEther(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\Users\\root\\Desktop\\marketplace(demo)\\src\\components\\web3.js"],"names":["Web3","Eth","NFTMarketplace","selectedAccount","erc721token","isInitialized","web3","address","init","provider","window","ethereum","request","method","accounts","console","log","code","on","networks","eth","Contract","abi","mintToken","data","price","txHash","token_id","eth_wei","utils","toWei","transactionParameters","to","from","methods","mint","encodeABI","params","alert","getTransactionReceipt","then","result","receipt","topics","tokenIdHex","toString","parseInt","getBalance","balanceOf","call","totalSupply","ownerOf","id","payEther","_id","isTransaction","getPrice","buy","send","value"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport Eth from 'web3-eth'\r\nimport NFTMarketplace from \"../abis/NFTMarketplace.json\";\r\n\r\nlet selectedAccount;\r\nlet erc721token;\r\nlet isInitialized = false;\r\nlet web3;\r\nlet address;\r\n\r\nexport const init = async () => {\r\n    let provider = window.ethereum;\r\n\r\n\tif (typeof provider !== 'undefined') {\r\n\t\ttry{\r\n\t\t    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            selectedAccount = accounts[0];\r\n            console.log(`Selected account is ${selectedAccount}`);\r\n\t\t}catch(error){\r\n\t\t    if (error.code === 4001) {\r\n                console.log(\"User rejected request\")\r\n                 //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\r\n                \r\n          }\r\n          console.log(error);\r\n\t\t}\r\n\t\t\t\r\n\r\n\t\twindow.ethereum.on('accountsChanged', function (accounts) {\r\n\t\t\tselectedAccount = accounts[0];\r\n\t\t\tif(typeof selectedAccount == \"undefined\"){\r\n\t\t\t    //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\r\n\t\t\t}\r\n\t\t\tconsole.log(`Selected account changed to ${selectedAccount}`);\r\n\t\t\t\r\n\t\t});\r\n        web3 = new Web3(provider);\r\n        address = NFTMarketplace.networks['5777'].address;\r\n        erc721token = new web3.eth.Contract(NFTMarketplace.abi, address)\r\n        isInitialized = true;\r\n\r\n    }\r\n};\r\n\r\nexport const mintToken = async (data, price) =>{\r\n    if(!isInitialized){\r\n        await init();\r\n    }\r\n    let txHash = null;\r\n    let token_id = 0;\r\n    let eth_wei = web3.utils.toWei(price, 'ether');    \r\n    \r\n\r\n   const transactionParameters = {\r\n        to: address,\r\n        from: selectedAccount, \r\n        'data': erc721token.methods.mint(data, eth_wei).encodeABI()\r\n    };\r\n\r\n    try {\r\n        txHash = await window.ethereum\r\n            .request({\r\n                method: 'eth_sendTransaction',\r\n                params: [transactionParameters],\r\n            });\r\n        }catch(error){\r\n                console.log(error);\r\n                if (error.code === 4001) {\r\n                     window.alert(\"You just denied transaction!\");\r\n                }\r\n            }\r\n    let receipt = await web3.eth.getTransactionReceipt(txHash)\r\n        .then(function (result) {\r\n            return result\r\n        });\r\n    let topics = receipt['logs'][0]['topics'];\r\n    let tokenIdHex = topics[3].toString(10);\r\n    token_id = parseInt(tokenIdHex, 16)\r\n            \r\n    return {'Hash': txHash, 'TokenID': token_id, 'Price': price};\r\n    \r\n};\r\n\r\nexport const getBalance = async () =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.balanceOf(selectedAccount).call();\r\n}\r\n\r\nexport const totalSupply = async () =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.totalSupply().call();\r\n}\r\n\r\nexport const ownerOf = async (id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.ownerOf(id).call();\r\n}\r\n\r\nexport const payEther = async (_id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    //const unit = require('ethjs-unit');\r\n\r\n    let isTransaction = false;\r\n   \r\n    let price = await erc721token.methods.getPrice(_id).call();\r\n    console.log(price);\r\n    console.log(address);\r\n    let eth_wei = web3.utils.toWei(price, 'ether');    \r\n\r\n    if (selectedAccount != null) {\r\n        let txHash = null;\r\n        try {\r\n            \r\n            txHash = await erc721token.methods.buy(_id).send({\r\n                from: selectedAccount,\r\n                value: eth_wei \r\n              });\r\n            console.log(txHash) \r\n        } catch (error) {\r\n            console.log(error.code)\r\n            console.log(error)\r\n        }\r\n        isTransaction = true;\r\n    }\r\n    return isTransaction;\r\n}"]},"metadata":{},"sourceType":"module"}