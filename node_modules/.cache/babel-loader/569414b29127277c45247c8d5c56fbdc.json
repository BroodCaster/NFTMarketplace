{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from 'web3';\nimport NFTMarketplace from '../abis/NFTMarketplace.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Error\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(web3.version); //const networkId = await web3.eth.net.getId()      \n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"createNFT\",\n    value: function () {\n      var _createNFT = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var web3, abi, networkData, contract;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                web3 = window.web3;\n                abi = [{\n                  \"inputs\": [],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"constructor\"\n                }, {\n                  \"anonymous\": false,\n                  \"inputs\": [{\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"_from\",\n                    \"type\": \"address\"\n                  }, {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"_to\",\n                    \"type\": \"address\"\n                  }, {\n                    \"indexed\": true,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_tokenId\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"Transfer\",\n                  \"type\": \"event\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"address\",\n                    \"name\": \"_owner\",\n                    \"type\": \"address\"\n                  }],\n                  \"name\": \"balanceOf\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"name\",\n                  \"outputs\": [{\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_tokenId\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"ownerOf\",\n                  \"outputs\": [{\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceID\",\n                    \"type\": \"bytes4\"\n                  }],\n                  \"name\": \"supportsInterface\",\n                  \"outputs\": [{\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"symbol\",\n                  \"outputs\": [{\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_index\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"tokenByIndex\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"index\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"tokenOfOwnerByIndex\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"tokens\",\n                  \"outputs\": [{\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"totalSupply\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"address\",\n                    \"name\": \"_from\",\n                    \"type\": \"address\"\n                  }, {\n                    \"internalType\": \"address\",\n                    \"name\": \"_to\",\n                    \"type\": \"address\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"transferFrom\",\n                  \"outputs\": [],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"string\",\n                    \"name\": \"_token\",\n                    \"type\": \"string\"\n                  }],\n                  \"name\": \"mint\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"function\"\n                }];\n                networkData = NFTMarketplace.networks['5777'];\n\n                if (!networkData) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 6;\n                return web3.eth.contract(abi, networkData.address);\n\n              case 6:\n                contract = _context4.sent;\n                this.setState({\n                  contract: contract\n                });\n                console.log(this.state.contract);\n                contract.methods.totalSupply().call(function (res) {\n                  console.log(\"Total Supply: \", res);\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createNFT() {\n        return _createNFT.apply(this, arguments);\n      }\n\n      return createNFT;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \" \",\n      contract: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"NFTMarketplace\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.createNFT();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Mint\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\root\\Desktop\\marketplace(demo)\\src\\components\\App.js"],"names":["React","Component","Web3","NFTMarketplace","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","version","abi","networkData","networks","contract","address","setState","state","methods","totalSupply","call","res","props","account","createNFT"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport Web3 from 'web3';\r\nimport NFTMarketplace from '../abis/NFTMarketplace.json';\r\n\r\nclass App extends Component{\r\n    async componentDidMount(){\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n\r\n    async loadWeb3(){\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n          }\r\n          else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n          } \r\n          else{\r\n              window.alert(\"Error\")\r\n          }\r\n    }\r\n\r\n    async loadBlockchainData(){\r\n        const web3 = window.web3\r\n        // Load account\r\n        const accounts = await web3.eth.getAccounts()\r\n        console.log(web3.version)\r\n        //const networkId = await web3.eth.net.getId()      \r\n}\r\n\r\n    async createNFT(){\r\n        const web3 = window.web3   \r\n        const abi = [\r\n            {\r\n              \"inputs\": [],\r\n              \"stateMutability\": \"nonpayable\",\r\n              \"type\": \"constructor\"\r\n            },\r\n            {\r\n              \"anonymous\": false,\r\n              \"inputs\": [\r\n                {\r\n                  \"indexed\": true,\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"_from\",\r\n                  \"type\": \"address\"\r\n                },\r\n                {\r\n                  \"indexed\": true,\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"_to\",\r\n                  \"type\": \"address\"\r\n                },\r\n                {\r\n                  \"indexed\": true,\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"_tokenId\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"Transfer\",\r\n              \"type\": \"event\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"_owner\",\r\n                  \"type\": \"address\"\r\n                }\r\n              ],\r\n              \"name\": \"balanceOf\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [],\r\n              \"name\": \"name\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"string\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"_tokenId\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"ownerOf\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"address\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"bytes4\",\r\n                  \"name\": \"interfaceID\",\r\n                  \"type\": \"bytes4\"\r\n                }\r\n              ],\r\n              \"name\": \"supportsInterface\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"bool\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"bool\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [],\r\n              \"name\": \"symbol\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"string\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"_index\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"tokenByIndex\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"owner\",\r\n                  \"type\": \"address\"\r\n                },\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"index\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"tokenOfOwnerByIndex\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"tokens\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"string\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [],\r\n              \"name\": \"totalSupply\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"view\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"_from\",\r\n                  \"type\": \"address\"\r\n                },\r\n                {\r\n                  \"internalType\": \"address\",\r\n                  \"name\": \"_to\",\r\n                  \"type\": \"address\"\r\n                },\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"tokenId\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"name\": \"transferFrom\",\r\n              \"outputs\": [],\r\n              \"stateMutability\": \"nonpayable\",\r\n              \"type\": \"function\"\r\n            },\r\n            {\r\n              \"inputs\": [\r\n                {\r\n                  \"internalType\": \"string\",\r\n                  \"name\": \"_token\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ],\r\n              \"name\": \"mint\",\r\n              \"outputs\": [\r\n                {\r\n                  \"internalType\": \"uint256\",\r\n                  \"name\": \"\",\r\n                  \"type\": \"uint256\"\r\n                }\r\n              ],\r\n              \"stateMutability\": \"nonpayable\",\r\n              \"type\": \"function\"\r\n            }\r\n          ]\r\n        const networkData = NFTMarketplace.networks['5777']\r\n        if(networkData) {\r\n        const contract = await web3.eth.contract(abi, networkData.address)\r\n        this.setState({contract})\r\n        console.log(this.state.contract)\r\n\r\n        contract.methods.totalSupply().call(function(res){\r\n            console.log(\"Total Supply: \", res)    \r\n        })\r\n    }\r\n};\r\n\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {\r\n             account: \" \",\r\n             contract: null\r\n         }\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>NFTMarketplace</h1>\r\n                <button onClick = {() => this.createNFT()}>Mint</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}