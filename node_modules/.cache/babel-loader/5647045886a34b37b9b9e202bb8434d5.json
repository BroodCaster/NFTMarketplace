{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\root\\\\Desktop\\\\marketplace(demo)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport Eth from 'web3-eth';\nimport NFTMarketplace from \"../abis/NFTMarketplace.json\";\nvar selectedAccount;\nvar erc721token;\nvar isInitialized = false;\nvar web3;\nvar address;\nvar metaMaskInstalled;\nexport var init =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var provider, accounts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = window.ethereum;\n\n            if (!(typeof provider !== 'undefined')) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return window.ethereum.request({\n              method: 'eth_requestAccounts'\n            });\n\n          case 5:\n            accounts = _context.sent;\n            selectedAccount = accounts[0];\n            console.log(\"Selected account is \".concat(selectedAccount));\n            metaMaskInstalled = true;\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (_context.t0.code === 4001) {\n              console.log(\"User rejected request\"); //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\n            }\n\n            console.log(_context.t0);\n\n          case 15:\n            window.ethereum.on('accountsChanged', function (accounts) {\n              selectedAccount = accounts[0];\n\n              if (typeof selectedAccount == \"undefined\") {//window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\n              }\n\n              console.log(\"Selected account changed to \".concat(selectedAccount));\n            });\n            web3 = new Web3(provider);\n            address = NFTMarketplace.networks['4'].address;\n            erc721token = new web3.eth.Contract(NFTMarketplace.abi, address);\n            isInitialized = true;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var mintToken =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data, price) {\n    var txHash, token_id, eth_wei;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (isInitialized) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return init();\n\n          case 3:\n            txHash = null;\n            token_id = 0;\n            eth_wei = web3.utils.toWei(price, 'ether');\n            _context2.prev = 6;\n            _context2.next = 9;\n            return erc721token.methods.mint(data, eth_wei).send({\n              from: selectedAccount\n            }).then(function (res) {\n              return res;\n            });\n\n          case 9:\n            txHash = _context2.sent;\n            console.log(txHash);\n            _context2.next = 17;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](6);\n            console.log(_context2.t0);\n\n            if (_context2.t0.code === 4001) {\n              window.alert(\"You just denied transaction!\");\n            }\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 13]]);\n  }));\n\n  return function mintToken(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getBalance =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (isInitialized) {\n              _context3.next = 3;\n              break;\n            }\n\n            _context3.next = 3;\n            return init();\n\n          case 3:\n            return _context3.abrupt(\"return\", erc721token.methods.balanceOf(selectedAccount).call());\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getBalance() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var totalSupply =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (isInitialized) {\n              _context4.next = 3;\n              break;\n            }\n\n            _context4.next = 3;\n            return init();\n\n          case 3:\n            return _context4.abrupt(\"return\", erc721token.methods.totalSupply().call());\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function totalSupply() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var ownerOf =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (isInitialized) {\n              _context5.next = 3;\n              break;\n            }\n\n            _context5.next = 3;\n            return init();\n\n          case 3:\n            return _context5.abrupt(\"return\", erc721token.methods.ownerOf(id).call());\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function ownerOf(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var payEther =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(_id) {\n    var price, pay, txHash;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (isInitialized) {\n              _context6.next = 3;\n              break;\n            }\n\n            _context6.next = 3;\n            return init();\n\n          case 3:\n            if (!metaMaskInstalled) {\n              _context6.next = 24;\n              break;\n            }\n\n            _context6.next = 6;\n            return erc721token.methods.getPrice(_id).call();\n\n          case 6:\n            price = _context6.sent;\n            console.log(price);\n            pay = price * 102 / 100;\n\n            if (!(selectedAccount != null)) {\n              _context6.next = 22;\n              break;\n            }\n\n            _context6.prev = 10;\n            _context6.next = 13;\n            return erc721token.methods.buy(_id).send({\n              from: selectedAccount,\n              value: pay\n            });\n\n          case 13:\n            txHash = _context6.sent;\n            console.log(txHash);\n            _context6.next = 21;\n            break;\n\n          case 17:\n            _context6.prev = 17;\n            _context6.t0 = _context6[\"catch\"](10);\n            console.log(_context6.t0.code);\n            console.log(_context6.t0);\n\n          case 21:\n            return _context6.abrupt(\"return\", txHash);\n\n          case 22:\n            _context6.next = 25;\n            break;\n\n          case 24:\n            init();\n\n          case 25:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[10, 17]]);\n  }));\n\n  return function payEther(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var startAuction =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(name, price) {\n    var txHash;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (isInitialized) {\n              _context7.next = 3;\n              break;\n            }\n\n            _context7.next = 3;\n            return init();\n\n          case 3:\n            if (!metaMaskInstalled) {\n              _context7.next = 18;\n              break;\n            }\n\n            if (!(selectedAccount != null)) {\n              _context7.next = 16;\n              break;\n            }\n\n            _context7.prev = 5;\n            _context7.next = 8;\n            return erc721token.methods.mintAuction(name, price).send({\n              from: selectedAccount\n            });\n\n          case 8:\n            txHash = _context7.sent;\n            console.log(txHash);\n            _context7.next = 15;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](5);\n            console.log(_context7.t0);\n\n          case 15:\n            return _context7.abrupt(\"return\", txHash);\n\n          case 16:\n            _context7.next = 19;\n            break;\n\n          case 18:\n            window.alert(\"Please install MetaMask!\");\n\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 12]]);\n  }));\n\n  return function startAuction(_x5, _x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var bid =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(amount, _id) {\n    var eth_wei, txHash;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if (isInitialized) {\n              _context8.next = 3;\n              break;\n            }\n\n            _context8.next = 3;\n            return init();\n\n          case 3:\n            eth_wei = web3.utils.toWei(amount, 'ether');\n\n            if (!metaMaskInstalled) {\n              _context8.next = 19;\n              break;\n            }\n\n            if (!(selectedAccount != null)) {\n              _context8.next = 17;\n              break;\n            }\n\n            _context8.prev = 6;\n            _context8.next = 9;\n            return erc721token.methods.bid(_id).send({\n              from: selectedAccount,\n              value: eth_wei\n            });\n\n          case 9:\n            txHash = _context8.sent;\n            console.log(txHash);\n            _context8.next = 16;\n            break;\n\n          case 13:\n            _context8.prev = 13;\n            _context8.t0 = _context8[\"catch\"](6);\n            console.log(_context8.t0);\n\n          case 16:\n            return _context8.abrupt(\"return\", txHash);\n\n          case 17:\n            _context8.next = 20;\n            break;\n\n          case 19:\n            window.alert(\"Please install MetaMask!\");\n\n          case 20:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[6, 13]]);\n  }));\n\n  return function bid(_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var auctionEnd =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(_id) {\n    var txHash;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (isInitialized) {\n              _context9.next = 3;\n              break;\n            }\n\n            _context9.next = 3;\n            return init();\n\n          case 3:\n            if (!metaMaskInstalled) {\n              _context9.next = 18;\n              break;\n            }\n\n            if (!(selectedAccount != null)) {\n              _context9.next = 16;\n              break;\n            }\n\n            _context9.prev = 5;\n            _context9.next = 8;\n            return erc721token.methods.auctionEnd(_id).call();\n\n          case 8:\n            txHash = _context9.sent;\n            console.log(txHash);\n            _context9.next = 15;\n            break;\n\n          case 12:\n            _context9.prev = 12;\n            _context9.t0 = _context9[\"catch\"](5);\n            console.log(_context9.t0);\n\n          case 15:\n            return _context9.abrupt(\"return\", txHash);\n\n          case 16:\n            _context9.next = 19;\n            break;\n\n          case 18:\n            window.alert(\"Please install MetaMask!\");\n\n          case 19:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[5, 12]]);\n  }));\n\n  return function auctionEnd(_x9) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var callPrice =\n/*#__PURE__*/\nfunction () {\n  var _ref10 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(tokenID) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (isInitialized) {\n              _context10.next = 3;\n              break;\n            }\n\n            _context10.next = 3;\n            return init();\n\n          case 3:\n            return _context10.abrupt(\"return\", erc721token.methods.getPrice(tokenID).call());\n\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function callPrice(_x10) {\n    return _ref10.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\Users\\root\\Desktop\\marketplace(demo)\\src\\components\\web3.js"],"names":["Web3","Eth","NFTMarketplace","selectedAccount","erc721token","isInitialized","web3","address","metaMaskInstalled","init","provider","window","ethereum","request","method","accounts","console","log","code","on","networks","eth","Contract","abi","mintToken","data","price","txHash","token_id","eth_wei","utils","toWei","methods","mint","send","from","then","res","alert","getBalance","balanceOf","call","totalSupply","ownerOf","id","payEther","_id","getPrice","pay","buy","value","startAuction","name","mintAuction","bid","amount","auctionEnd","callPrice","tokenID"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport Eth from 'web3-eth'\r\nimport NFTMarketplace from \"../abis/NFTMarketplace.json\";\r\n\r\nlet selectedAccount;\r\nlet erc721token;\r\nlet isInitialized = false;\r\nlet web3;\r\nlet address;\r\nlet metaMaskInstalled;\r\n\r\nexport const init = async () => {\r\n    let provider = window.ethereum;\r\n\r\n\tif (typeof provider !== 'undefined') {\r\n\t\ttry{\r\n\t\t    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            selectedAccount = accounts[0];\r\n            console.log(`Selected account is ${selectedAccount}`);\r\n            metaMaskInstalled = true;\r\n\t\t}catch(error){\r\n\t\t    if (error.code === 4001) {\r\n                console.log(\"User rejected request\")\r\n                 //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\r\n                \r\n          }\r\n          console.log(error);\r\n\t\t}\r\n\t\t\t\r\n\r\n\t\twindow.ethereum.on('accountsChanged', function (accounts) {\r\n\t\t\tselectedAccount = accounts[0];\r\n\t\t\tif(typeof selectedAccount == \"undefined\"){\r\n\t\t\t    //window.location.href = \"https://nft.howsimpl.com/user/dashboard\";\r\n\t\t\t}\r\n\t\t\tconsole.log(`Selected account changed to ${selectedAccount}`);\r\n\t\t\t\r\n\t\t});\r\n        web3 = new Web3(provider);\r\n        address = NFTMarketplace.networks['4'].address;\r\n        erc721token = new web3.eth.Contract(NFTMarketplace.abi, address)\r\n        isInitialized = true;\r\n\r\n    }\r\n};\r\n\r\nexport const mintToken = async (data, price) =>{\r\n    if(!isInitialized){\r\n        await init();\r\n    }\r\n    let txHash = null;\r\n    let token_id = 0;\r\n    let eth_wei = web3.utils.toWei(price, 'ether');    \r\n    \r\n\r\n   \r\n\r\n    try {\r\n        txHash = await erc721token.methods.mint(data, eth_wei).send({from: selectedAccount}).then((res)=>{\r\n            return res;\r\n        });\r\n        console.log(txHash)\r\n        }catch(error){\r\n                console.log(error);\r\n                if (error.code === 4001) {\r\n                     window.alert(\"You just denied transaction!\");\r\n                }\r\n            }\r\n    \r\n    \r\n};\r\n\r\nexport const getBalance = async () =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.balanceOf(selectedAccount).call();\r\n}\r\n\r\nexport const totalSupply = async () =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.totalSupply().call();\r\n}\r\n\r\nexport const ownerOf = async (id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    return erc721token.methods.ownerOf(id).call();\r\n}\r\n\r\nexport const payEther = async (_id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    \r\n    if(metaMaskInstalled){\r\n    let price = await erc721token.methods.getPrice(_id).call();\r\n    console.log(price);\r\n    let pay = (price*102)/100;\r\n\r\n    if (selectedAccount != null) {\r\n        let txHash;\r\n        try {\r\n            \r\n            txHash = await erc721token.methods.buy(_id).send({\r\n                from: selectedAccount,\r\n                value: pay \r\n              });\r\n            console.log(txHash) \r\n        } catch (error) {\r\n            console.log(error.code)\r\n            console.log(error)\r\n        }\r\n        return txHash;\r\n    }\r\n    }else{\r\n        init()\r\n    }\r\n}\r\n\r\nexport const startAuction = async (name, price) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n        if(metaMaskInstalled){\r\n            if (selectedAccount != null) {\r\n                let txHash;\r\n                try {\r\n                    \r\n                    txHash = await erc721token.methods.mintAuction(name, price).send({\r\n                        from: selectedAccount\r\n                      });\r\n                    console.log(txHash) \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                return txHash;\r\n            }\r\n        }else{\r\n            window.alert(\"Please install MetaMask!\")\r\n        }\r\n}\r\n\r\nexport const bid = async (amount, _id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n    let eth_wei = web3.utils.toWei(amount, 'ether');   \r\n        if(metaMaskInstalled){\r\n            if (selectedAccount != null) {\r\n                let txHash;\r\n                try {\r\n                    \r\n                    txHash = await erc721token.methods.bid(_id).send({\r\n                        from: selectedAccount,\r\n                        value: eth_wei\r\n                      });\r\n                    console.log(txHash) \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                return txHash;\r\n            }\r\n        }else{\r\n            window.alert(\"Please install MetaMask!\")\r\n        }\r\n}\r\n\r\nexport const auctionEnd = async(_id) =>{\r\n    if(!isInitialized){\r\n        await init()\r\n    }\r\n        if(metaMaskInstalled){\r\n            if (selectedAccount != null) {\r\n                let txHash;\r\n                try {\r\n                    \r\n                    txHash = await erc721token.methods.auctionEnd(_id).call();\r\n                    console.log(txHash) \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                return txHash;\r\n            }\r\n        }else{\r\n            window.alert(\"Please install MetaMask!\")\r\n        }\r\n\r\n}\r\n\r\nexport const callPrice = async (tokenID) =>{\r\n    if(!isInitialized){\r\n       await init()\r\n   }\r\n   \r\n   return erc721token.methods.getPrice(tokenID).call();\r\n \r\n}"]},"metadata":{},"sourceType":"module"}